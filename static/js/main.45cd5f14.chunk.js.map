{"version":3,"sources":["components/Nav/Nav.js","helpers/helpers.date.js","components/Period/Period.js","components/Newtask/Newtask.js","components/TaskMenu/TaskMenu.js","components/TaskMemo/TaskMemo.js","components/Task/Task.js","components/Tasks/Tasks.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Nav","navItems","fixNavItem","toggleNav","elements","sort","a","b","id","map","item","className","onClick","name","addDays","date","dayShift","newDate","Date","setTime","getTime","getWeekStart","day","getDay","getWeekEnd","getMonthStart","date_p","setDate","getMonthEnd","month","getMonth","setMonth","getYearStart","getYearEnd","getWeek","setHours","getDate","week1","getFullYear","Math","round","Period","dateStart","dateEnd","period","toglePeriod","periodName","monthNames","fullName","shortName","dayNames","header","subheader","formatDate","Newtask","enterNewTask","type","placeholder","onKeyDown","e","key","target","value","TaskMenu","setContextMenu","togleTaskPin","deleteTask","task_id","pinned","memo","wrapper","useRef","handleDocumentClick","current","contains","toDoId","showContext","showMemo","onShow","document","addEventListener","onHide","removeEventListener","useEffect","ref","TaskMemo","editTaskMemo","useState","taskMemo","setTaskMemo","onChange","Task","menu","memoForm","task","togleTaskDone","showContextMenu","showMemoMenu","done","text","taskClassName","defaultChecked","htmlFor","Tasks","tasks","contextMenu","showDate","groupTasksList","elem","pinnedTasks","unPinnedTasks","todos","forEach","el","todo","push","pinnedTaskElement","length","dateElement","LOCAL_STORAGE_KEY_TODO","App","dateFrom","dateTo","fixInterval","toDoTasks","toDoData","setToDoData","d","year","join","storedToDoData","JSON","parse","localStorage","getItem","setItem","stringify","prevToDoData","direction","taskText","newToDo","uuid","resArr","element","formatedDate","found","find","groupTodo","filter","formatedToDoDate","compareWithDateFrom","localeCompare","compareWithDateTo","idx","findIndex","oldToDO","slice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.45cd5f14.chunk.js","sourcesContent":["import React from 'react';\nimport './Nav.css';\n\nconst Nav = ({ navItems, fixNavItem, toggleNav }) => {\n  \n  const elements = navItems\n  .sort((a, b) => {\n      return(a.id - b.id);\n  })\n  .map((item) => {\n    function handleNavItemClick() {\n      toggleNav(item.id);\n    }\n    let className = 'nav__item';\n    if (item.id === fixNavItem) {\n      className += ' nav__item-active';\n    }\n    return (\n      <li className={className} key={item.id} onClick={handleNavItemClick}>{item.name}</li>\n    );\n  });\n  return (\n      <nav className=\"nav\">\n        <ul className=\"nav__items\">\n          {elements}\n        </ul>\n      </nav>\n  )\n};\n\nexport default Nav;","export function addDays(date, dayShift) {\n  const dayMilliseconds = 24*60*60*1000;\n  let newDate = new Date(date);   \n  newDate.setTime(newDate.getTime() + dayShift * dayMilliseconds);\n  return newDate; \n}\n\nexport function getWeekStart(date) {\n  const day = date.getDay() || 7;\n  if (day === 1) {\n    return date\n  }\n  return addDays(date, (day - 1) * -1); \n}\n\nexport function getWeekEnd(date) {\n  const day = date.getDay() || 7;\n  if (day === 7) {\n    return date\n  }\n  return addDays(date, 7 - day); \n}\n\nexport function getMonthStart(date) {\n  let date_p = new Date(date.getTime());\n  date_p.setDate(1);\n  return date_p; \n}\n\nexport function getMonthEnd(date) {\n  let date_p = new Date(date.getTime());\n  const month = date_p.getMonth();\n  if (month === 1) {\n    date_p = addDays(date_p.setMonth(2, 1), -1);  \n  } else if (month === 0 || month === 2 || month === 4 || month === 6 || month === 7 || month === 9 || month === 11) {\n    date_p.setDate(31);  \n  } else {\n    date_p.setDate(30);  \n  }\n  return date_p; \n}\n\nexport function getYearStart(date) {\n  let date_p = new Date(date.getTime());\n  date_p.setMonth(0, 1);\n  return date_p; \n}\n\nexport function getYearEnd(date) {\n  let date_p = new Date(date.getTime());\n  date_p.setMonth(11, 31);\n  return date_p; \n}\n\nexport function getWeek(date) {\n  const date_p = new Date(date.getTime());\n  date_p.setHours(0, 0, 0, 0);\n  // Thursday in current week decides the year.\n  date_p.setDate(date_p.getDate() + 3 - (date_p.getDay() + 6) % 7);\n  // January 4 is always in week 1.\n  const week1 = new Date(date_p.getFullYear(), 0, 4);\n  // Adjust to Thursday in week 1 and count number of weeks from date to week1.\n  return 1 + Math.round(((date_p.getTime() - week1.getTime()) / 86400000\n                        - 3 + (week1.getDay() + 6) % 7) / 7);\n}","import React from 'react';\nimport './Period.css';\nimport {getWeek} from '../../helpers/helpers.date';\n\nfunction formatDate(dateStart, dateEnd, period = 1) {\n  const monthNames = [\n    {fullName:\"January\", shortName:\"Jan\"},\n    {fullName:\"February\", shortName:\"Feb\"},\n    {fullName:\"March\", shortName:\"Mar\"},\n    {fullName:\"April\", shortName:\"Apr\"},\n    {fullName:\"May\", shortName:\"May\"},\n    {fullName:\"June\", shortName:\"Jun\"},\n    {fullName:\"July\", shortName:\"Jul\"},\n    {fullName:\"August\", shortName:\"Aug\"},\n    {fullName:\"September\", shortName:\"Sep\"},\n    {fullName:\"October\", shortName:\"Oct\"},\n    {fullName:\"November\", shortName:\"Nov\"},\n    {fullName:\"December\", shortName:\"Dec\"}\n  ];\n\n  const dayNames = [\n    {fullName: \"Sunday\", shortName: \"Sun\"},\n    {fullName: \"Monday\", shortName: \"Mon\"},\n    {fullName: \"Tuesday\", shortName: \"Tue\"},\n    {fullName: \"Wednesday\", shortName: \"Wed\"},\n    {fullName: \"Thursday\", shortName: \"Thu\"},\n    {fullName: \"Friday\", shortName: \"Fri\"},\n    {fullName: \"Saturday\", shortName: \"Sat\"}\n  ];\n  switch(period) {\n    case 1:\n      return {\n        header: dayNames[dateStart.getDay()].fullName, \n        subheader: `${monthNames[dateStart.getMonth()].shortName} ${dateStart.getDate()}, ${dateStart.getFullYear()}`\n      }\n    case 2:\n        return {\n          header: `${getWeek(dateStart)} week of ${dateStart.getFullYear()}`, \n          subheader: `${monthNames[dateStart.getMonth()].shortName} ${dateStart.getDate()} - ${monthNames[dateEnd.getMonth()].shortName} ${dateEnd.getDate()}`\n        } \n    case 3:\n      return {\n        header: `${monthNames[dateStart.getMonth()].fullName}, ${dateStart.getFullYear()}`, \n        subheader: `${monthNames[dateStart.getMonth()].shortName} ${dateStart.getDate()}, ${dayNames[dateStart.getDay()].shortName} - ${monthNames[dateEnd.getMonth()].shortName} ${dateEnd.getDate()}, ${dayNames[dateEnd.getDay()].shortName}`\n      }   \n    case 4:\n      return {\n        header: dateStart.getFullYear(), \n        subheader: `${monthNames[dateStart.getMonth()].shortName} ${dateStart.getDate()}, ${dayNames[dateStart.getDay()].shortName} - ${monthNames[dateEnd.getMonth()].shortName} ${dateEnd.getDate()}, ${dayNames[dateEnd.getDay()].shortName}`\n      }\n    default:\n      return {\n        header: \"\", \n        subheader: \"\"\n      }  \n  }\n\n}\n\nexport default function Period ({dateStart, dateEnd, period, toglePeriod}) {\n  const periodName = formatDate(dateStart, dateEnd, period);\n  return (\n    <div className=\"date\">\n      <i \n        className=\"fas fa-angle-left date_slide\"\n        onClick={()=>toglePeriod('prev')}  \n      ></i>\n      <div className=\"date_caption\">\n        <h2 className=\"date__header\">{periodName.header}</h2>\n        <h3 className=\"date__subheader\">{periodName.subheader}</h3>\n      </div>\n      <i \n        className=\"fas fa-angle-right date_slide\"\n        onClick={()=>toglePeriod('next')} \n      ></i>\n    </div>\n  )\n};","import React from 'react';\nimport './Newtask.css';\n\nexport default function Newtask ({enterNewTask}) {\n  function handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      enterNewTask(e.target.value);\n      e.target.value = '';\n    }\n  }\n  return (\n    <div className=\"newtask\">\n      <i className=\"fas fa-align-left newtask__icon\"></i>\n      <input \n        className=\"newtask__input\" \n        type=\"text\" \n        placeholder=\"Add a task...\" \n        onKeyDown={handleKeyDown}\n      />\n    </div>\n  )\n}","import {useRef, useEffect} from 'react';\nimport './TaskMenu.css';\n\nexport default function TaskMenu({setContextMenu, togleTaskPin, deleteTask, task_id, pinned, memo}) {\n  \n  const wrapper = useRef(null);\n\n  function onClickOutside () {\n    setContextMenu({\n      toDoId: task_id,\n      showContext: false,\n      showMemo: false,\n    });\n  }\n\n  function handleDocumentClick(e) {\n    if (wrapper.current && !wrapper.current.contains(e.target)) {\n      onClickOutside();\n    }\n  };\n\n  function addOutsideClickListener() {\n    document.addEventListener('click', handleDocumentClick);\n  }\n\n  function removeOutsideClickListener() {\n    document.removeEventListener('click', handleDocumentClick);\n  }\n\n  function onShow () {\n    addOutsideClickListener();\n  }\n  \n  function onHide () {\n    removeOutsideClickListener();\n  }\n\n  useEffect(()=>{\n    onShow();\n    return () => {\n      onHide();\n    };\n  }, []);\n\n  return (\n    <div \n      className=\"menu\"\n      ref={wrapper}\n    >\n      <div \n        className=\"menu__item\" \n        onClick={()=>{\n          setContextMenu({\n            toDoId: task_id,\n            showContext: false,\n            showMemo: false,\n          });\n          onHide();\n          togleTaskPin(task_id);\n        }}\n      >\n        <i className=\"fas fa-thumbtack menu__icon\"></i>\n        <span className=\"menu__caption\">{pinned ? \"Unpin from top\" : \"Pin on the top\"}</span>\n      </div>\n      <div \n        className=\"menu__item\"\n        onClick={()=>{\n          setContextMenu({\n            toDoId: task_id,\n            showContext: false,\n            showMemo: true,\n          });\n          onHide();\n        }}\n      >\n        <i className=\"far fa-sticky-note menu__icon\"></i>\n        <span className=\"menu__caption\">{memo ? \"Edit memo\" : \"Ad a memo\"}</span>\n      </div>\n      <div \n        className=\"menu__item\"\n        onClick={()=>{\n          setContextMenu({\n            toDoId: task_id,\n            showContext: false,\n            showMemo: false,\n          });\n          onHide();\n          deleteTask(task_id);\n        }}\n      >\n        <i className=\"far fa-trash-alt menu__icon\"></i>\n        <span className=\"menu__caption\">Delete</span>\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from 'react';\nimport './TaskMemo.css';\n\nexport default function TaskMemo({ setContextMenu, task_id, editTaskMemo, memo }) {\n  const [taskMemo, setTaskMemo] = useState(memo);\n  const onChangeMemo = (e) => {\n    setTaskMemo(e.target.value)\n  }; \n  return (\n    <div className=\"memo\">\n      <input \n        className=\"memo__input\" \n        type=\"text\" \n        placeholder=\"Add memo for task...\" \n        onChange ={onChangeMemo} \n        value = {taskMemo}\n      />\n      <button className=\"memo__button\" >\n        <i \n          className=\"fas fa-check\"\n          onClick={()=>{\n            editTaskMemo(task_id, taskMemo);\n            setContextMenu({\n              toDoId: task_id,\n              showContext: false,\n              showMemo: false,\n            });\n          }}         \n        ></i>\n      </button>\n      <button className=\"memo__button\" >\n        <i \n          className=\"fas fa-times\"\n          onClick={()=>{\n            setContextMenu({\n              toDoId: task_id,\n              showContext: false,\n              showMemo: false,\n            });\n          }}\n        ></i>\n      </button>\n    </div>\n  )\n}\n","import TaskMenu from './../TaskMenu/TaskMenu';\nimport TaskMemo from './../TaskMemo/TaskMemo';\n\n\nexport default function Task ({task,  togleTaskDone, togleTaskPin, deleteTask, showContextMenu, showMemoMenu, setContextMenu, editTaskMemo}) {\n  const {id, done, pinned, text, memo} = task;\n  let taskClassName = 'task';\n  if (pinned) {\n    taskClassName += ' task--pinned';\n  }\n\n  let menu;\n  if (showContextMenu) {\n    menu = (\n      <TaskMenu\n        setContextMenu={setContextMenu}\n        togleTaskPin={togleTaskPin}\n        deleteTask={deleteTask}\n        task_id={id}\n        pinned={pinned}\n        memo={memo}\n      />\n    );\n  }\n  let memoForm;\n  if (showMemoMenu) {\n    memoForm = (\n      <TaskMemo \n        task_id={id} \n        setContextMenu={setContextMenu}\n        editTaskMemo={editTaskMemo}\n        memo={memo}\n      />\n    );\n  }\n\n  return (\n    <div className={taskClassName}>\n      <div className=\"task__inner\">\n        <input \n          type=\"checkbox\" \n          className=\"custom-checkbox\" \n          id={id} \n          name=\"taskstatus\" \n          value=\"yes\"\n          defaultChecked ={done}\n          onChange={()=> togleTaskDone(id)}\n        />\n        <label className=\"task__desription\" htmlFor={id}>\n            {text}\n        </label>\n        <i\n          className=\"fas fa-ellipsis-h task__menu\"\n          onClick={() => {\n            setContextMenu({\n              toDoId: id,\n              showContext: !showContextMenu,\n              showMemo: false,\n            });\n          }}\n        ></i>\n      </div>\n      <p className=\"task__memo\">{!showMemoMenu && memo}</p>\n      {menu}\n      {memoForm}\n      \n    </div>\n  )\n}\n","import React from 'react';\nimport './Tasks.css';\n\nimport Task from './../Task/Task';\n\n\nexport default function Tasks ({tasks, togleTaskDone, togleTaskPin, deleteTask, contextMenu, setContextMenu, editTaskMemo, showDate}) {\n\n  const {toDoId, showContext, showMemo} = contextMenu;\n\n  let groupTasksList = tasks\n  .map((elem) => {\n    const date = elem.date;\n    const pinnedTasks = [];\n    const unPinnedTasks = [];\n    let arrToPush = pinnedTasks;\n\n    elem.todos\n    .forEach(el => {\n      const todo = <Task\n        key={el.id}\n        task={el}\n        togleTaskDone={togleTaskDone}\n        togleTaskPin={togleTaskPin}\n        deleteTask={deleteTask}\n        setContextMenu={setContextMenu}\n        showContextMenu={toDoId === el.id ? showContext : false}\n        showMemoMenu={toDoId === el.id ? showMemo : false}\n        editTaskMemo={editTaskMemo}\n      />\n\n      arrToPush = el.pinned ? pinnedTasks : unPinnedTasks;\n      arrToPush.push(todo)\n\n    });\n    let pinnedTaskElement = null;\n    if (pinnedTasks.length > 0) {\n      pinnedTaskElement = <div className=\"tasks tasks--pinned\">{pinnedTasks}</div>  \n    }\n    let dateElement = null;\n    if (showDate) {\n      dateElement = <p className=\"tasks__date\">{date}</p>\n    }\n\n    return (\n      <div key={date}>\n        {dateElement}\n        {pinnedTaskElement}\n        <div className=\"tasks\">\n          {unPinnedTasks}\n        </div>\n      </div>\n    )\n  });\n\n  return (\n    <>\n      {groupTasksList}\n    </>\n  )\n}","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport Nav from '../Nav/Nav';\nimport Period from '../Period/Period';\nimport Newtask from '../Newtask/Newtask';\nimport Tasks from '../Tasks/Tasks';\n\nimport {addDays,getWeekStart, getWeekEnd, getMonthStart, getMonthEnd, getYearStart, getYearEnd} from '../../helpers/helpers.date';\n\nimport { v4 as uuid } from 'uuid';\n\n\nconst LOCAL_STORAGE_KEY_TODO = 'todoApp.todoData';\n\nfunction App() {\n  const navItems = [\n    { \n      id : 1,\n      name : 'Day',\n    },\n    { \n      id : 2,\n      name : 'Week',\n    },\n    { \n      id : 3,\n      name : 'Month',\n    },\n    { \n      id : 4,\n      name : 'Year',\n    }\n  ];\n\n  const [toDoData, setToDoData] = useState({fixNavItem: 1,\n    fixInterval: { dateStart: new Date(), dateEnd: new Date() }, toDoTasks: [] });\n\n  const [contextMenu, setContextMenu] = useState({\n    toDoId: \"b2a90b85-20e1-4097-a867-7b2692afeb2a\",\n    showContext: false,\n    showMemo: false,\n  })\n\n  useEffect(() => {\n    const storedToDoData = JSON.parse(\n      localStorage.getItem(LOCAL_STORAGE_KEY_TODO),\n      function (key, value) {\n        if (key === \"dateStart\" || key === \"dateEnd\") return new Date(value);\n        return value;\n      }\n    ) || {\n      fixNavItem: 1,\n      fixInterval: { dateStart: new Date(), dateEnd: new Date(),},\n      toDoTasks: [],\n    };\n    setToDoData(storedToDoData);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY_TODO, JSON.stringify(toDoData))\n  }, [toDoData])\n\n  function toggleNav(id) {\n    let dateStart = new Date();\n    let dateEnd = new Date();\n    switch (id) {\n      case 2:\n        dateStart = getWeekStart(dateStart);\n        dateEnd = getWeekEnd(dateEnd);\n        break;\n      case 3:\n        dateStart = getMonthStart(dateStart);\n        dateEnd = getMonthEnd(dateStart);\n        break;\n      case 4:\n        dateStart = getYearStart(dateStart);\n        dateEnd = getYearEnd(dateStart);\n        break;\n      default:\n        break;\n    }\n    setToDoData((prevToDoData) => {\n      return {\n        ...prevToDoData,\n        fixNavItem: id,\n        fixInterval: { dateStart, dateEnd },\n      }\n    });   \n  }\n\n  function toglePeriod(direction) {\n    let {fixInterval: {dateStart, dateEnd}} = toDoData;\n    switch (toDoData.fixNavItem) {\n      case 1:\n        if (direction === 'next') {\n          dateStart = addDays(dateStart, 1);\n        } else {\n          dateStart = addDays(dateStart, -1);\n        }\n        dateEnd = dateStart; \n        break;\n      case 2:\n        if (direction === 'next') {\n          dateStart = addDays(dateEnd, 1);\n          dateEnd   = getWeekEnd(dateStart);\n        } else {\n          dateEnd   = addDays(dateStart, -1);\n          dateStart = getWeekStart(dateEnd);\n        }\n        break;\n      case 3:\n        if (direction === 'next') {\n          dateStart = addDays(dateEnd, 1);\n          dateEnd   = getMonthEnd(dateStart);\n        } else {\n          dateEnd   = addDays(dateStart, -1);\n          dateStart = getMonthStart(dateEnd);\n        }\n        break;\n      case 4:\n        if (direction === 'next') {\n          dateStart = addDays(dateEnd, 1);\n          dateEnd   = getYearEnd(dateStart);\n        } else {\n          dateEnd   = addDays(dateStart, -1);\n          dateStart = getYearStart(dateEnd);\n        }\n        break;\n      default:\n        break;\n    }\n    //setfixInterval({dateStart, dateEnd});\n    setToDoData((prevToDoData) => {\n      return {\n        ...prevToDoData,\n        fixInterval: { dateStart, dateEnd },\n      }\n    });   \n  }\n\n  function enterNewTask(taskText) {\n    const newToDo = {\n      id: uuid(),\n      done: false,\n      pinned: false,\n      text: taskText,\n      date: toDoData.fixInterval.dateStart, \n    };\n    setToDoData((prevToDoData) => {\n      return {\n        ...prevToDoData,\n        toDoTasks: [...prevToDoData.toDoTasks, newToDo],\n      }\n    }); \n  }\n\n  function togleTaskDone (id) {\n    setToDoData((prevToDoData) => {\n      const idx = prevToDoData.toDoTasks.findIndex(el => el.id === id);\n      const oldToDO = prevToDoData.toDoTasks[idx];\n      const newToDo = {...oldToDO, done: !oldToDO.done}\n      return {\n        ...prevToDoData ,\n        toDoTasks: [...prevToDoData.toDoTasks.slice(0, idx), newToDo, ...prevToDoData.toDoTasks.slice(idx + 1)],\n      }\n    }); \n  }\n\n  function togleTaskPin (id) {\n    setToDoData((prevToDoData) => {\n      const idx = prevToDoData.toDoTasks.findIndex(el => el.id === id);\n      const oldToDO = prevToDoData.toDoTasks[idx];\n      const newToDo = {...oldToDO, pinned: !oldToDO.pinned}\n      return {\n        ...prevToDoData ,\n        toDoTasks: [...prevToDoData.toDoTasks.slice(0, idx), newToDo, ...prevToDoData.toDoTasks.slice(idx + 1)],\n      }\n    }); \n  }\n\n  function deleteTask (id) {\n    setToDoData((prevToDoData) => {\n      const idx = prevToDoData.toDoTasks.findIndex(el => el.id === id);\n      return {\n        ...prevToDoData ,\n        toDoTasks: [...prevToDoData.toDoTasks.slice(0, idx), ...prevToDoData.toDoTasks.slice(idx + 1)],\n      }\n    }); \n\n  }\n\n  function editTaskMemo (id, text) {\n    setToDoData((prevToDoData) => {\n      const idx = prevToDoData.toDoTasks.findIndex(el => el.id === id);\n      const oldToDO = prevToDoData.toDoTasks[idx];\n      const newToDo = {...oldToDO, memo: text}\n      return {\n        ...prevToDoData ,\n        toDoTasks: [...prevToDoData.toDoTasks.slice(0, idx), newToDo, ...prevToDoData.toDoTasks.slice(idx + 1)],\n      }\n    }); \n  }\n\n  function formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n\n    return [year, month, day].join('.');\n  }\n\n  function filterTodo(todos, dateFrom, dateTo) {\n    return todos.filter((todo)=> {\n        const formatedToDoDate = formatDate(todo.date);\n        const compareWithDateFrom = formatedToDoDate.localeCompare(formatDate(dateFrom));\n        const compareWithDateTo = formatedToDoDate.localeCompare(formatDate(dateTo));\n        return (compareWithDateFrom >= 0) && (compareWithDateTo <=0)\n    })\n  }\n\n\n  function groupTodo(todos) {\n    const resArr = [];\n    todos.forEach(element => {\n        const formatedDate = formatDate(element.date);\n        const found = resArr.find(el => el.date === formatedDate);\n        if (found) {\n            found.todos.push(element)\n        } else {\n            resArr.push({\n                date: formatedDate, \n                todos: [element]\n            })\n        }\n    });\n    return resArr\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"wrapper\">\n        <header className=\"App-header\">\n          <Nav \n            navItems={navItems} \n            fixNavItem={toDoData.fixNavItem}\n            toggleNav={toggleNav}\n          />\n        </header>\n        <Period \n          //TODO use one prop and object destructuring\n          dateStart={toDoData.fixInterval.dateStart}\n          dateEnd={toDoData.fixInterval.dateEnd}\n          period={toDoData.fixNavItem}\n          toglePeriod={toglePeriod}\n        />\n        <div className=\"taskswrapper\">\n          <Newtask\n            enterNewTask={enterNewTask}\n          />\n          <Tasks \n            tasks={groupTodo(filterTodo(toDoData.toDoTasks, toDoData.fixInterval.dateStart, toDoData.fixInterval.dateEnd))}\n            togleTaskDone={togleTaskDone}\n            togleTaskPin={togleTaskPin}\n            deleteTask={deleteTask}\n            contextMenu={contextMenu}\n            setContextMenu={setContextMenu}\n            editTaskMemo={editTaskMemo}\n            showDate={toDoData.fixNavItem === 1 ? false : true}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}